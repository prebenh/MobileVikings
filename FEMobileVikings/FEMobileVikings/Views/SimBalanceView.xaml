<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="FEMobileVikings.Views.SimBalanceView"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FEMobileVikings.Views"
    xmlns:common="using:FEMobileVikings.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <common:GroupDataTemplateSelector x:Key="groupDataTemplateSelector" SimInfoTemplate="{StaticResource SimBalanceItemTemplate}" TopUpHistoryTemplate="{StaticResource TopUpHistoryItemTemplate}" UsageTemplate="{StaticResource UsageItemTemplate}"/>
        <common:GroupDataTemplateSelector x:Key="snappedGroupDataTemplateSelector" SimInfoTemplate="{StaticResource SnappedSimBalanceItemTemplate}" TopUpHistoryTemplate="{StaticResource SnappedTopUpHistoryItemTemplate}" UsageTemplate="{StaticResource SnappedUsageItemTemplate}"/>
        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding Groups}"
            IsSourceGrouped="true"
            ItemsPath="Items"/>

    </Page.Resources>
    <common:LayoutAwarePage.DataContext>
        <Binding Mode="OneWay" Path="SimBalanceViewModel" Source="{StaticResource Locator}"/>
    </common:LayoutAwarePage.DataContext>
    <common:LayoutAwarePage.TopAppBar>
        <AppBar x:Name="NavigationAppBar" Padding="10,0,10,0" AutomationProperties.Name="Bottom App Bar" Background="#7F000000" BorderBrush="#7F000000">
            <Grid>
                <StackPanel x:Name="RightPanel" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button x:Name="VikingPoints" Tag="Next" Command="{Binding VikingPoints, Mode=OneWay}" AutomationProperties.Name ="Viking Points" Content="Viking Points" Style="{StaticResource NavigationButtonStyle}" FontSize="26.667" />
                    <Button x:Name="WhoIs" x:Uid="WhoIsViking" Tag="WhoIs" Command="{Binding IsViking, Mode=OneWay}" AutomationProperties.Name ="Who is Viking?" Content="Who is Viking" Style="{StaticResource NavigationButtonStyle}" FontSize="26.667" />
                </StackPanel>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.TopAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}" Background="{x:Null}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid Background="{StaticResource HeaderRed}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Text="{StaticResource AppName}" Grid.Column="1" Style="{StaticResource PageHeaderTextStyle}"/>
            <ProgressBar x:Name="progressBar" Grid.ColumnSpan="2"  Height="10" VerticalAlignment="Top"  IsIndeterminate="True" Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="{StaticResource WhiteBackground}"/>

        </Grid>

        <!-- Horizontal scrolling grid used in most view states -->

        <!-- Vertical scrolling list only used when snapped -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Grouped Items"
            Grid.Row="1"
            Margin="0,-10,0,0"
            Padding="10,0,0,60"
            HeaderTemplate="{StaticResource GroupHeaderTemplate}" ItemTemplateSelector="{StaticResource snappedGroupDataTemplateSelector}" SelectionMode="None"
            ItemsSource="{Binding Mode=OneWay, Source={StaticResource groupedItemsViewSource}}" Background="{StaticResource WhiteBackground}">

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="7,7,0,0">
                                <TextBlock
								        FontSize="24"
                                        Style="{StaticResource ThinColumnHeader}"
                                        Margin="0,20"
        								AutomationProperties.Name="Group Title"
        								Text="{Binding Title}"/>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>
        <Border x:Name="border" Background="{StaticResource WhiteBackground}" Grid.Row="1">
<!-- Horizontal scrolling grid used in most view states -->
        	<GridView
        		x:Name="itemGridView"
        		AutomationProperties.AutomationId="ItemGridView"
        		AutomationProperties.Name="Grouped Items"
        		Padding="116,0,40,46"
        		ItemsSource="{Binding Mode=OneWay, Source={StaticResource groupedItemsViewSource}}"  HeaderTemplate="{StaticResource GroupHeaderTemplate}" ItemTemplateSelector="{StaticResource groupDataTemplateSelector}" SelectionMode="None" IsDoubleTapEnabled="False" IsHoldingEnabled="False" IsRightTapEnabled="False" IsTapEnabled="False" ManipulationMode="None"
            >
        		<GridView.ItemsPanel>
        			<ItemsPanelTemplate>                        
        				<VirtualizingStackPanel Orientation="Horizontal"/>
        			</ItemsPanelTemplate>
        		</GridView.ItemsPanel>
        		<GridView.GroupStyle>
        			<GroupStyle>
        				<GroupStyle.HeaderTemplate>
        					<DataTemplate>
        						<Grid Margin="1,0,0,6">
        							<TextBlock
                                        Style="{StaticResource ThinColumnHeader}"
                                        Margin="0,10,0,0"
        								AutomationProperties.Name="Group Title"
        								Text="{Binding Title}"/>
        						</Grid>
        					</DataTemplate>
        				</GroupStyle.HeaderTemplate>
        				<GroupStyle.Panel>
        					<ItemsPanelTemplate>
        						<VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,20,0"/>
        					</ItemsPanelTemplate>
        				</GroupStyle.Panel>
        			</GroupStyle>
        		</GridView.GroupStyle>
        	</GridView>
        </Border>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape">
                	<Storyboard>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemListView">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<Visibility>Collapsed</Visibility>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Padding">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="96,0,10,56"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<Visibility>Collapsed</Visibility>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
