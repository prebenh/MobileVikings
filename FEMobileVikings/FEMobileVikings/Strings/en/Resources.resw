<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Balance" xml:space="preserve">
    <value>Balance</value>
  </data>
  <data name="Credit" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="MobileNumbers.Text" xml:space="preserve">
    <value>My sims</value>
  </data>
  <data name="MVCredit" xml:space="preserve">
    <value>Free min. to MV</value>
  </data>
  <data name="MVSms" xml:space="preserve">
    <value>SMS to MV</value>
  </data>
  <data name="Password.Text" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SignIn.Content" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="Sms" xml:space="preserve">
    <value>SMS</value>
  </data>
  <data name="TopUpHistory" xml:space="preserve">
    <value>Top-ups</value>
  </data>
  <data name="Usagehistory" xml:space="preserve">
    <value>Usage</value>
  </data>
  <data name="UserName.Text" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="ValidUntil" xml:space="preserve">
    <value>Bundle expires</value>
  </data>
  <data name="ForgotPassword.Content" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="SignInFailed.Text" xml:space="preserve">
    <value>Failed to sign in</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign out</value>
  </data>
  <data name="Total.Text" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TryAgain.Text" xml:space="preserve">
    <value>Try again in 10 minutes</value>
  </data>
  <data name="WhoIsMv.Text" xml:space="preserve">
    <value>Who is Mobile Viking?</value>
  </data>
  <data name="WhoIsViking.Content" xml:space="preserve">
    <value>Wie Is Viking?</value>
  </data>
  <data name="Check.Content" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="GetAccount" xml:space="preserve">
    <value>Get a sim card</value>
  </data>
  <data name="Available.Text" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="PrivacyPolicyTitle" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="NoInternet" xml:space="preserve">
    <value>Can't connect to the Internet.</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Mobile Vikings is a virtual mobile provider in Belgium and this application supplies all the necessary information. Things like Sim Balance, Top up history, usage history, the mobile vikings twitter stream and the latest blog entries. You can also check who of your friends is a Mobile Viking and how much viking points you have earned and used.</value>
  </data>
  <data name="PrivacyPolicy.Text" xml:space="preserve">
    <value>In this document, “we” refers to  HuP#  respects your privacy and is committed to protecting your personal information. This privacy policy details how we manage your personal information and safeguard your privacy.
This privacy policy sets out how we uses and protects any information that you give us when you use this software.
We may change this policy from time to time by updating this page. You should check this page from time to time to ensure that you are happy with any changes. This policy is effective from 12 September 2012.</value>
  </data>
  <data name="PrivacyPolicySecurity.Text" xml:space="preserve">
    <value>We are committed to ensuring that your information is secure. In order to prevent unauthorised access or disclosure, we employ industry-standard physical, electronic and managerial procedures to safeguard and secure the information we collect online.</value>
  </data>
  <data name="PrivacyPolicyWhatWeCollect.Text" xml:space="preserve">
    <value>Personal Information is that information or opinion (including information or an opinion forming part of a database), whether true or not, and whether recorded in a material form or not, about an individual whose identity is apparent, or can reasonably ascertained. As such personal information can include your name, address and contact details.

We may collect the following information:

- real name and mobile vikings username
- contact information including email address
- geographic information including country of residence
- technical computer and network information such as IP address, device specification and usage metrics</value>
  </data>
  <data name="PrivacyPolicyWhatWeDo.Text" xml:space="preserve">
    <value>We use this information to understand our customers’ needs and provide them with a better product and service. In particular for the following reasons:

- identify usage trends to improve the product experience
- analyze error and crash reports to improve application reliability
- gather feedback on the product’s user experience for future enhancements
- provide cross-device services without user configuration</value>
  </data>
  <data name="MobileNumber.Text" xml:space="preserve">
    <value>Mobile number:</value>
  </data>
  <data name="PrivacyPolicySecurityTitle.Text" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="PrivacyPolicyHeader.Text" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="PrivacyPolicyWhatWeCollectTitle.Text" xml:space="preserve">
    <value>What we collect</value>
  </data>
  <data name="PrivacyPolicyWhatWeDoTitle.Text" xml:space="preserve">
    <value>What we do with the information we gather</value>
  </data>
  <data name="VikingPointsDescription" xml:space="preserve">
    <value>You've currently got {0} Viking Points left!
Points equals money
Viking points can be traded in for top-ups! 10 VP equals 1 EUR.</value>
  </data>
</root>